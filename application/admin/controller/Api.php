<?php
/**
 * Created by PhpStorm.
 * User=>JHR
 * Date=>2019/1/30
 * Time=>14:15
 */
namespace  app\admin\controller;
use think\Controller;
use think\Db;
use wx\Jssdk;
class Api extends Controller {

    protected $cmd;
    protected $token;
    protected $encodingAesKey;
    protected $config;

    public function initialize()
    {
        parent::initialize(); // TODO=>Change the autogenerated stub
        $this->cmd = request()->controller() . '/' . request()->action();
        $this->token = "shanhaiwenhua2019";
        $this->encodingAesKey = "bGuv54u5UmjFXkZefZ16OPZepcu3y6pbwMBneOKncZo";
        $this->config = [
            'appid' => 'wx1dc64acc9bd9eb09',
            'app_secret' => '18030345ebbbc089f628a5eb1db5cda3',
            'mch_id' => '1490402642',
            'appkey' => 'TIANJINTAOCIYUAN20190111SHWHCOPY',
            'sslcert_path' => '/var/www/html/shwh/public/cert/apiclient_cert.pem',
            'sslkey_path' => '/var/www/html/shwh/public/cert/apiclient_key.pem'
        ];
    }

    public function index() {
        //验证第三方服务器
        $param = input('param.');
        if(isset($param['echostr'])){
            $this->xmllog($this->cmd,var_export($param,true));
            $token = $this->token;
            $tmpArr = array($token,$param["timestamp"], $param["nonce"]);
            sort($tmpArr, SORT_STRING);
            $tmpStr = implode('',$tmpArr);
            $tmpStr = sha1( $tmpStr );
            if($tmpStr === $param["signature"]) {
                //第一次接入微信API
                exit($param['echostr']);
            }
        }else{
//            $xml = file_get_contents('php://input');
//            $data = $this->xml2array($xml);
//            if($data) {
//                $this->xmllog($this->cmd,var_export($data,true));
//            }
            exit('success');
        }

    }
//7 查询授权完成状态
    public function cardinfo() {
        $jssdk = new Jssdk($this->config['appid'], $this->config['app_secret']);
        $access_token = $jssdk->getAccessToken();
        $s_pappid = 'd3gxZGM2NGFjYzliZDllYjA5X_i4jn6NAgX0Dl14GNauU5bkCCn9w7W5w7xmCvvUMvV1';

        $url = 'https://api.weixin.qq.com/card/invoice/getauthdata?access_token=' . $access_token;
        $data = [
            "s_pappid" => $s_pappid,
            "order_id" => "102",
        ];
        $result = $this->curl_post_data($url,json_encode($data));
        $obj = json_decode($result);
        halt($obj);
    }
//8 拒绝开票
    public function rejectInvoice() {
        $jssdk = new Jssdk($this->config['appid'], $this->config['app_secret']);
        $access_token = $jssdk->getAccessToken();
        $s_pappid = 'd3gxZGM2NGFjYzliZDllYjA5X_i4jn6NAgX0Dl14GNauU5bkCCn9w7W5w7xmCvvUMvV1';

        $url = 'https://api.weixin.qq.com/card/invoice/rejectinsert?access_token=' . $access_token;
        $data = [
            "s_pappid" => $s_pappid,
            "order_id" => "102",
            "reason" => 'invalid order_sn',
            "url"   => 'http://www.baidu.com'
        ];
        $result = $this->curl_post_data($url,json_encode($data));
        $obj = json_decode($result);
        halt($obj);
    }
//11 关联商户号与开票平台
    public function set_pay_mch() {
        $jssdk = new Jssdk($this->config['appid'], $this->config['app_secret']);
        $access_token = $jssdk->getAccessToken();
        $s_pappid = 'd3gxZGM2NGFjYzliZDllYjA5X_i4jn6NAgX0Dl14GNauU5bkCCn9w7W5w7xmCvvUMvV1';

        $url = 'https://api.weixin.qq.com/card/invoice/setbizattr?action=set_pay_mch&access_token=' . $access_token;
        $data['paymch_info'] = [
            "s_pappid" => $s_pappid,
            "mchid" => $this->config['mch_id'],
        ];
        $result = $this->curl_post_data($url,json_encode($data));
        $obj = json_decode($result);
        halt($obj);
    }
//12 查询商户号与开票平台关联情况
    public function get_pay_mch() {
        $jssdk = new Jssdk($this->config['appid'], $this->config['app_secret']);
        $access_token = $jssdk->getAccessToken();
        $url = 'https://api.weixin.qq.com/card/invoice/setbizattr?action=get_pay_mch&access_token=' . $access_token;
        $result = $this->curl_post_data($url,json_encode([]));
        $obj = json_decode($result);
        halt($obj);
    }

    public function makeoutinvoice() {
        $data['invoiceinfo'] = [
            "wxopenid"=>"oNEu_s8TWzpK6p6-kUFnFHaS1GiI",
            "ddh" =>"155032941148455400978",
            "fpqqlsh"=>"155032941148455400978",
            "nsrsbh"=>"91120116MA05MAH15R",
            "nsrmc"=>"山海文化有限公司",
            "nsrdz"=>"天津滨海高新区华科三路华鼎智地2号楼613室",
            "nsrdh"=>"022-87797523",
            "nsrbank"=>"天津银行融源支行",
            "nsrbankid"=>"106601201090299967",
            "ghfmc"=>"天津文博艺术品销售有限公司",
            "kpr"=>"姜海蕤",
            "jshj"=> "1.17",
            "hjje"=> "1",
            "hjse"=> "0.17",
            "hylx"=>"0",
            "invoicedetail_list"=>[
                "fphxz"=>"0",
                "spbm"=>"1060500000000000000",
                "xmmc"=>"文创产品",
                "xmsl"=>"1",
                "xmdj"=>"1",
                "xmje"=>"1",
                "sl"=>"0.17",
                "se"=>"0.17"
            ],
        ];
        $jssdk = new Jssdk($this->config['appid'], $this->config['app_secret']);
        $access_token = $jssdk->getAccessToken();
        $url = 'https://api.weixin.qq.com/card/invoice/makeoutinvoice?access_token=' . $access_token;
        $result = $this->curl_post_data($url,json_encode($data));
        $obj = json_decode($result);
        halt($obj);
    }


    private function checkSignature($param)
    {
        $token = $this->token;
        $tmpArr = array($token,$param["timestamp"], $param["nonce"]);
        sort($tmpArr, SORT_STRING);
        $tmpStr = implode('',$tmpArr);
        $tmpStr = sha1( $tmpStr );
        if($tmpStr === $param["signature"]){
            return true;
        }else{
            return false;
        }
    }
    //生成签名
    private function getSign($arr)
    {
        //去除数组中的空值
        $arr = array_filter($arr);
        //如果数组中有签名删除签名
        if(isset($arr['sing']))
        {
            unset($arr['sing']);
        }
        //按照键名字典排序
        ksort($arr);
        //生成URL格式的字符串
        $str = http_build_query($arr)."&key=" . $this->config['appkey'];
        $str = $this->arrToUrl($str);
        return  strtoupper(md5($str));
    }
    //URL解码为中文
    private function arrToUrl($str)
    {
        return urldecode($str);
    }

    private function curl_post_data($url, $curlPost)
    {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_HEADER, 0);

        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $curlPost);
        curl_setopt($ch, 1, 2);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
        $data = curl_exec($ch);
        return $data;
    }

    private function xmllog($cmd = '',$msg = '') {
        $file= 'xml.txt';
        $text='[Time ' . date('Y-m-d H:i:s') ."]  cmd:".$cmd."\n".$msg."\n---END---" . "\n";
        if(false !== fopen($file,'a+')){
            file_put_contents($file,$text,FILE_APPEND);
        }else{
            echo '创建失败';
        }
    }

    private function xml2array($xml)
    {
        //禁止引用外部xml实体
        libxml_disable_entity_loader(true);
        $values = json_decode(json_encode(simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA)), true);
        return $values;
    }

    private function array2xml($arr) {
        if(!is_array($arr) || count($arr) <= 0) {
            return false;
        }
        $xml = "<xml>";
        foreach ($arr as $key=>$val)
        {
            if (is_numeric($val)){
                $xml.="<".$key.">".$val."</".$key.">";
            }else{
                $xml.="<".$key."><![CDATA[".$val."]]></".$key.">";
            }
        }
        $xml.="</xml>";
        return $xml;
    }

    private function genOrderSn($letter = '') {
        $time = explode (" ", microtime ());
        $timeArr = explode('.',$time [0]);
        $mtime = array_pop($timeArr);
        $fulltime = $letter.$time[1] . $mtime . mt_rand(100,999);
        return $fulltime;
    }


}